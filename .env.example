# BusyHub Environment Configuration
# Copy this file to .env.local and fill in your actual values

# ===========================================
# NextAuth.js Configuration (Required)
# ===========================================

# NextAuth URL - your app's base URL
NEXTAUTH_URL=http://localhost:3000

# NextAuth Secret - generate a random string for JWT encryption
# You can generate one with: openssl rand -base64 32
NEXTAUTH_SECRET=your_random_secret_here

# ===========================================
# Google OAuth Configuration (Required)
# ===========================================

# Google OAuth Client ID - from Google Cloud Console
AUTH_GOOGLE_ID=your_google_client_id.apps.googleusercontent.com

# Google OAuth Client Secret - from Google Cloud Console  
AUTH_GOOGLE_SECRET=your_google_client_secret

# Google OAuth Redirect URI - for calendar OAuth flow
# Usually the same as NEXTAUTH_URL for development
AUTH_GOOGLE_REDIRECT_URI=http://localhost:3000

# ===========================================
# OpenAI Configuration (Optional)
# ===========================================

# OpenAI API Key - for AI-powered calendar insights
# Leave empty to disable AI features
OPENAI_API_KEY=your_openai_api_key

# ===========================================
# Google OAuth Setup Instructions
# ===========================================
#
# 1. Go to Google Cloud Console (https://console.cloud.google.com)
# 2. Create a new project or select existing one
# 3. Enable Google Calendar API
# 4. Go to "Credentials" → "Create Credentials" → "OAuth client ID"
# 5. Choose "Web application"
# 6. Add authorized redirect URIs:
#    - http://localhost:3000/api/auth/callback/google (for NextAuth)
#    - http://localhost:3000/api/calendar/callback (for Calendar OAuth)
# 7. Copy Client ID and Client Secret to the variables above
#
# Scopes used by this app:
# - openid, email, profile (for authentication)
# - https://www.googleapis.com/auth/calendar.events.readonly (for calendar data)
